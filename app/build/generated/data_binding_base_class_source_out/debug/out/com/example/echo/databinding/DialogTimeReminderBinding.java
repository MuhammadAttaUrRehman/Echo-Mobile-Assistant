// Generated by view binder compiler. Do not edit!
package com.example.echo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.echo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogTimeReminderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final DatePicker reminderDatePicker;

  @NonNull
  public final EditText reminderDescription;

  @NonNull
  public final TimePicker reminderTimePicker;

  @NonNull
  public final EditText reminderTitle;

  private DialogTimeReminderBinding(@NonNull LinearLayout rootView,
      @NonNull DatePicker reminderDatePicker, @NonNull EditText reminderDescription,
      @NonNull TimePicker reminderTimePicker, @NonNull EditText reminderTitle) {
    this.rootView = rootView;
    this.reminderDatePicker = reminderDatePicker;
    this.reminderDescription = reminderDescription;
    this.reminderTimePicker = reminderTimePicker;
    this.reminderTitle = reminderTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogTimeReminderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogTimeReminderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_time_reminder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogTimeReminderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.reminder_date_picker;
      DatePicker reminderDatePicker = ViewBindings.findChildViewById(rootView, id);
      if (reminderDatePicker == null) {
        break missingId;
      }

      id = R.id.reminder_description;
      EditText reminderDescription = ViewBindings.findChildViewById(rootView, id);
      if (reminderDescription == null) {
        break missingId;
      }

      id = R.id.reminder_time_picker;
      TimePicker reminderTimePicker = ViewBindings.findChildViewById(rootView, id);
      if (reminderTimePicker == null) {
        break missingId;
      }

      id = R.id.reminder_title;
      EditText reminderTitle = ViewBindings.findChildViewById(rootView, id);
      if (reminderTitle == null) {
        break missingId;
      }

      return new DialogTimeReminderBinding((LinearLayout) rootView, reminderDatePicker,
          reminderDescription, reminderTimePicker, reminderTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
